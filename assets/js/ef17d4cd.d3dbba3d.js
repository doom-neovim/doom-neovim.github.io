"use strict";(self.webpackChunkdoom_neovim_github_io=self.webpackChunkdoom_neovim_github_io||[]).push([[564],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>p});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),l=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=l(e.components);return a.createElement(i.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=d(e,["components","mdxType","originalType","parentName"]),m=l(t),p=r,f=m["".concat(i,".").concat(p)]||m[p]||c[p]||o;return t?a.createElement(f,s(s({ref:n},u),{},{components:t})):a.createElement(f,s({ref:n},u))}));function p(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=m;var d={};for(var i in n)hasOwnProperty.call(n,i)&&(d[i]=n[i]);d.originalType=e,d.mdxType="string"==typeof e?e:r,s[1]=d;for(var l=2;l<o;l++)s[l]=t[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5824:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var a=t(7462),r=(t(7294),t(3905));const o={},s="Dashboard",d={unversionedId:"modules/features/dashboard",id:"modules/features/dashboard",title:"Dashboard",description:"Adds a pretty dashboard upon opening doom-nvim.",source:"@site/docs/modules/features/dashboard.md",sourceDirName:"modules/features",slug:"/modules/features/dashboard",permalink:"/docs/modules/features/dashboard",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DAP / Debugger",permalink:"/docs/modules/features/dap"},next:{title:"Editorconfig",permalink:"/docs/modules/features/editorconfig"}},i={},l=[{value:"Settings",id:"settings",level:2},{value:"Settings",id:"settings-1",level:2},{value:"Keybinds",id:"keybinds",level:2},{value:"Autocommands",id:"autocommands",level:2}],u={toc:l};function c(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dashboard"},"Dashboard"),(0,r.kt)("p",null,"Adds a pretty dashboard upon opening doom-nvim."),(0,r.kt)("h2",{id:"settings"},"Settings"),(0,r.kt)("p",null,"Settings for the dashboard module."),(0,r.kt)("p",null,"You can access and override these values in your ",(0,r.kt)("inlineCode",{parentName:"p"},"config.lua"),". I.e."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local dashboard_settings = doom.features.dashboard.settings\ndashboard_settings.<field> = <new_value>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'dashboard.settings = {\n  entries = {\n    {\n      icon = "\uf15c  ",\n      desc = "Recently Opened Files          ",\n      shortcut = "SPC f r",\n      action = "Telescope oldfiles",\n    },\n    {\n      icon = "\uf02e  ",\n      desc = "Jump to Bookmark               ",\n      shortcut = "SPC s m",\n      action = "Telescope marks",\n    },\n    {\n      icon = "\uf462  ",\n      desc = "Open Configuration             ",\n      shortcut = "SPC D c",\n      action = "e " .. require("doom.core.config").source,\n    },\n    {\n      icon = "\uf462  ",\n      desc = "Open Modules                   ",\n      shortcut = "SPC D m",\n      action = "e " .. require("doom.core.modules").source,\n    },\n    {\n      icon = "\uf02d  ",\n      desc = "Open Documentation             ",\n      shortcut = "SPC D d",\n      action = "lua require(\'doom.core.functions\').open_docs()",\n    },\n  },\n  header = {\n    "                                                                              ",\n    "=================     ===============     ===============   ========  ========",\n    "\\\\\\\\ . . . . . . .\\\\\\\\   //. . . . . . .\\\\\\\\   //. . . . . . .\\\\\\\\  \\\\\\\\. . .\\\\\\\\// . . //",\n    "||. . ._____. . .|| ||. . ._____. . .|| ||. . ._____. . .|| || . . .\\\\/ . . .||",\n    "|| . .||   ||. . || || . .||   ||. . || || . .||   ||. . || ||. . . . . . . ||",\n    "||. . ||   || . .|| ||. . ||   || . .|| ||. . ||   || . .|| || . | . . . . .||",\n    "|| . .||   ||. _-|| ||-_ .||   ||. . || || . .||   ||. _-|| ||-_.|\\\\ . . . . ||",\n    "||. . ||   ||-\'  || ||  `-||   || . .|| ||. . ||   ||-\'  || ||  `|\\\\_ . .|. .||",\n    "|| . _||   ||    || ||    ||   ||_ . || || . _||   ||    || ||   |\\\\ `-_/| . ||",\n    "||_-\' ||  .|/    || ||    \\\\|.  || `-_|| ||_-\' ||  .|/    || ||   | \\\\  / |-_.||",\n    "||    ||_-\'      || ||      `-_||    || ||    ||_-\'      || ||   | \\\\  / |  `||",\n    "||    `\'         || ||         `\'    || ||    `\'         || ||   | \\\\  / |   ||",\n    "||            .===\' `===.         .===\'.`===.         .===\' /==. |  \\\\/  |   ||",\n    "||         .==\'   \\\\_|-_ `===. .===\'   _|_   `===. .===\' _-|/   `==  \\\\/  |   ||",\n    "||      .==\'    _-\'    `-_  `=\'    _-\'   `-_    `=\'  _-\'   `-_  /|  \\\\/  |   ||",\n    "||   .==\'    _-\'          `-__\\\\._-\'         `-_./__-\'         `\' |. /|  |   ||",\n    "||.==\'    _-\'                                                     `\' |  /==.||",\n    "==\'    _-\'                        N E O V I M                         \\\\/   `==",\n    "\\\\   _-\'                                                                `-_   /",\n    " `\'\'                                                                      ``\'  ",\n  },\n  footer = { "", "Doom Nvim loaded" },\n  colors = {\n    header = "#586268",\n    center = "#51afef",\n    shortcut = "#a9a1e1",\n    footer = "#586268",\n  },\n}\n')),(0,r.kt)("h2",{id:"settings-1"},"Settings"),(0,r.kt)("p",null,"Settings for the dashboard module."),(0,r.kt)("p",null,"You can access and override these values in your ",(0,r.kt)("inlineCode",{parentName:"p"},"config.lua"),". I.e."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local dashboard_settings = doom.features.dashboard.settings\ndashboard_settings.<field> = <new_value>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'dashboard.packages = {\n  ["dashboard-nvim"] = {\n    "glepnir/dashboard-nvim",\n    commit = "1676ebeb334a644dd68f7858f9e993602dd8577c",\n    cmd = "Dashboard",\n    opt = true,\n  },\n}\n\ndashboard.configs = {}\ndashboard.configs["dashboard-nvim"] = function()\n  local utils = require("doom.utils")\n  local db = require("dashboard")\n  local is_module_enabled = utils.is_module_enabled\n\n  if is_module_enabled("features", "auto_session") then\n    vim.g.dashboard_session_directory = doom.features.auto_session.settings.dir\n  end\n  if is_module_enabled("features", "telescope") then\n    vim.g.dashboard_default_executive = "telescope"\n  end\n  if is_module_enabled("features", "auto_session") then\n    doom.features.dashboard.settings.entries.a = {\n      icon = "\uf01e  ",\n      desc = "Load Last Session              ",\n      shortcut = "SPC q r",\n      action = "lua require(\'persistence\').load({ last = true })",\n    }\n  end\n\n  db.custom_center = doom.features.dashboard.settings.entries\n\n  if type(doom.features.dashboard.settings.footer) ~= "function" then\n    db.custom_footer = doom.features.dashboard.settings.footer\n  end\n\n  if type(doom.features.dashboard.settings.header) ~= "function" then\n    db.custom_header = doom.features.dashboard.settings.header\n  end\n  db.hide_tabline = false\n  db.hide_statusline = false\n  -- Header color\n  vim.cmd("hi! dashboardHeader   guifg=" .. doom.features.dashboard.settings.colors.header)\n  vim.cmd("hi! dashboardCenter   guifg=" .. doom.features.dashboard.settings.colors.center)\n  vim.cmd("hi! DashboardCenterIcon   guifg=" .. doom.features.dashboard.settings.colors.center)\n  vim.cmd("hi! dashboardShortcut guifg=" .. doom.features.dashboard.settings.colors.shortcut)\n  vim.cmd("hi! dashboardFooter   guifg=" .. doom.features.dashboard.settings.colors.footer)\nend\n\n')),(0,r.kt)("h2",{id:"keybinds"},"Keybinds"),(0,r.kt)("p",null,"Override these keybinds in your config.lua:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local dashboard = doom.features.dashboard\ndashboard.binds = {\n  { "<leader>prefix", "<cmd>echo \'my new keybind\'<CR>", name = "Description for my new keybind" }\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Keymap"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null," ","<","leader",">","oD ")),(0,r.kt)("td",{parentName:"tr",align:null},"Dashboard")))),(0,r.kt)("h2",{id:"autocommands"},"Autocommands"),(0,r.kt)("p",null,"Autocommands for the ",(0,r.kt)("inlineCode",{parentName:"p"},"doom.features.dashboard")," module."),(0,r.kt)("p",null,"Note: Plugins may create additional autocommands, these will be avaliable once\nthe plugin loads.  Please check the docs for these ",(0,r.kt)("a",{parentName:"p",href:"#plugins-packages"},"plugins"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"pattern"),(0,r.kt)("th",{parentName:"tr",align:null},"Pattern"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"FileType"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"VimEnter"),(0,r.kt)("td",{parentName:"tr",align:null})))))}c.isMDXComponent=!0}}]);