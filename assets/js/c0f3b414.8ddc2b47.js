"use strict";(self.webpackChunkdoom_neovim_github_io=self.webpackChunkdoom_neovim_github_io||[]).push([[5841],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=s(n),m=a,k=c["".concat(p,".").concat(m)]||c[m]||d[m]||l;return n?r.createElement(k,o(o({ref:t},u),{},{components:n})):r.createElement(k,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7479:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const l={},o="REPL",i={unversionedId:"modules/features/repl",id:"modules/features/repl",title:"REPL",description:"Adds support for a repl buffer for a range of languages.  This module takes",source:"@site/docs/modules/features/repl.md",sourceDirName:"modules/features",slug:"/modules/features/repl",permalink:"/docs/modules/features/repl",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Ranger",permalink:"/docs/modules/features/ranger"},next:{title:"statusline",permalink:"/docs/modules/features/statusline"}},p={},s=[{value:"Settings",id:"settings",level:2},{value:"Plugins/Packages",id:"pluginspackages",level:2},{value:"Keybinds",id:"keybinds",level:2}],u={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"repl"},"REPL"),(0,a.kt)("p",null,"Adds support for a repl buffer for a range of languages.  This module takes\nadvantage of ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/hkupty/iron.nvim"},"iron.nvim")," under the hood."),(0,a.kt)("h2",{id:"settings"},"Settings"),(0,a.kt)("p",null,"Settings for the repl module."),(0,a.kt)("p",null,"You can access and override these values in your ",(0,a.kt)("inlineCode",{parentName:"p"},"config.lua"),". I.e."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local repl_settings = doom.features.repl.settings\nrepl_settings.<field> = <new_value>\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'repl.settings = {\n  config = {\n    -- If iron should expose `<plug>(...)` mappings for the plugins\n    should_map_plug = false,\n    -- Whether a repl should be discarded or not\n    scratch_repl = true,\n    -- Your repl definitions come here\n    repl_definition = {\n      sh = {\n        command = { "zsh" },\n      },\n    },\n    position = "right",\n    size = 20,\n  },\n  -- Iron doesn\'t set keymaps by default anymore. Set them here\n  -- or use `should_map_plug = true` and map from you vim files\n  keymaps = {\n    send_motion = "<space>rc",\n    visual_send = "<space>rc",\n    send_file = "<space>rf",\n    send_line = "<space>rl",\n    -- send_mark = "<space>sm",\n    -- mark_motion = "<space>mc",\n    -- mark_visual = "<space>mc",\n    -- remove_mark = "<space>md",\n    cr = "<space>s<cr>",\n    interrupt = "<space>s<space>",\n    exit = "<space>sq",\n    clear = "<space>cl",\n  },\n  -- If the highlight is on, you can change how it looks\n  -- For the available options, check nvim_set_hl\n  highlight = {\n    italic = true,\n  },\n}\n\n')),(0,a.kt)("h2",{id:"pluginspackages"},"Plugins/Packages"),(0,a.kt)("p",null,"Plugins for the ",(0,a.kt)("inlineCode",{parentName:"p"},"doom.features.repl")," module."),(0,a.kt)("p",null,"These plugins will be passed into packer.nvim on startup.  You can tweak\nthe packer options by accessing these values in your ",(0,a.kt)("inlineCode",{parentName:"p"},"config.lua")," file.\ni.e.:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local repl_packages = doom.features.repl.packages\nrepl_packages['iron.nvim'].commit = '<my_new_commit_sha>'\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Key"),(0,a.kt)("th",{parentName:"tr",align:null},"Source"),(0,a.kt)("th",{parentName:"tr",align:null},"Commit"),(0,a.kt)("th",{parentName:"tr",align:null},"Is Lazy?"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null," iron.nvim ")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/hkupty/iron.nvim"},"hkupty/iron.nvim")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/hkupty/iron.nvim/commit/d1e80812aacd0c7e1a5c3050596716851d223ce9"},"2aacd0c7e1a5c3050596716851d223ce9")),(0,a.kt)("td",{parentName:"tr",align:null})))),(0,a.kt)("h2",{id:"keybinds"},"Keybinds"),(0,a.kt)("p",null,"Override these keybinds in your config.lua:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local repl = doom.features.repl\nrepl.binds = {\n  { "<leader>prefix", "<cmd>echo \'my new keybind\'<CR>", name = "Description for my new keybind" }\n}\n')),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Keymap"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null," ","<","leader",">","rr ")),(0,a.kt)("td",{parentName:"tr",align:null},"Repl")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null," ","<","leader",">","rf ")),(0,a.kt)("td",{parentName:"tr",align:null},"Send file")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null," ","<","leader",">","rs ")),(0,a.kt)("td",{parentName:"tr",align:null},"Send line")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null," ","<","leader",">","rc ")),(0,a.kt)("td",{parentName:"tr",align:null},"Send visual / motion")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null," ","<","leader",">","ri ")),(0,a.kt)("td",{parentName:"tr",align:null},"Interupt repl")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null," ","<","leader",">","r","<","cr",">"," ")),(0,a.kt)("td",{parentName:"tr",align:null},"Enter")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null," ","<","leader",">","rC ")),(0,a.kt)("td",{parentName:"tr",align:null},"Clear")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null," ","<","C-e",">"," ")),(0,a.kt)("td",{parentName:"tr",align:null},"Repl send line")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null," ","<","C-e",">"," ")),(0,a.kt)("td",{parentName:"tr",align:null},"Repl visual send")))))}d.isMDXComponent=!0}}]);