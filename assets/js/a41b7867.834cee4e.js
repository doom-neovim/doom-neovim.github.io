"use strict";(self.webpackChunkdoom_neovim_github_io=self.webpackChunkdoom_neovim_github_io||[]).push([[1877],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>s});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),u=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=u(e.components);return r.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=u(n),s=a,f=p["".concat(d,".").concat(s)]||p[s]||c[s]||o;return n?r.createElement(f,i(i({ref:t},m),{},{components:n})):r.createElement(f,i({ref:t},m))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9358:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={},i="Required",l={unversionedId:"modules/core/required",id:"modules/core/required",title:"Required",description:"Internal module providing much of the keybinds and glue for doom.nvim.",source:"@site/docs/modules/core/required.md",sourceDirName:"modules/core",slug:"/modules/core/required",permalink:"/docs/modules/core/required",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"reloader",permalink:"/docs/modules/core/reloader"},next:{title:"Required",permalink:"/docs/modules/core/treesitter"}},d={},u=[{value:"Settings",id:"settings",level:2},{value:"Autocommands",id:"autocommands",level:2},{value:"Commands",id:"commands",level:2}],m={toc:u};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"required"},"Required"),(0,a.kt)("p",null,"Internal module providing much of the keybinds and glue for doom.nvim."),(0,a.kt)("p",null,"Most settings here are configured via the ",(0,a.kt)("inlineCode",{parentName:"p"},"doom.settings")," table."),(0,a.kt)("h2",{id:"settings"},"Settings"),(0,a.kt)("p",null,"Settings for the required module."),(0,a.kt)("p",null,"You can access and override these values in your ",(0,a.kt)("inlineCode",{parentName:"p"},"config.lua"),". I.e."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local required_settings = doom.core.required.settings\nrequired_settings.<field> = <new_value>\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'required.packages = {\n  ["packer.nvim"] = {\n    "wbthomason/packer.nvim",\n  },\n  -- Required by some treesitter modules\n  ["aniseed"] = {\n    "Olical/aniseed",\n    commit = "9892a40d4cf970a2916a984544b7f984fc12f55c",\n    module_pattern = "aniseed",\n  },\n  ["plenary.nvim"] = {\n    "nvim-lua/plenary.nvim",\n    commit = "4b7e52044bbb84242158d977a50c4cbcd85070c7",\n    module = "plenary",\n  },\n  ["popup.nvim"] = {\n    "nvim-lua/popup.nvim",\n    commit = "b7404d35d5d3548a82149238289fa71f7f6de4ac",\n    module = "popup",\n  },\n  ["nvim-web-devicons"] = {\n    "kyazdani42/nvim-web-devicons",\n    commit = "a8cf88cbdb5c58e2b658e179c4b2aa997479b3da",\n    module = "nvim-web-devicons",\n  },\n  -- Must include impatient.nvim here, even though it\'s bootstrapped in\n  -- core.modules.lua so that packer doesn\'t try and clean it up.\n  ["impatient.nvim"] = {\n    "lewis6991/impatient.nvim",\n    disabled = not doom.impatient_enabled,\n  },\n}\n\nrequired.configs = {}\n\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"                           `required.binds`()\n")),(0,a.kt)("p",null,'return doom.core.doc_gen.generate_keybind_documentation("core.required")'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"                         `required.autocmds`()\n")),(0,a.kt)("h2",{id:"autocommands"},"Autocommands"),(0,a.kt)("p",null,"Autocommands for the ",(0,a.kt)("inlineCode",{parentName:"p"},"doom.core.required")," module."),(0,a.kt)("p",null,"Note: Plugins may create additional autocommands, these will be avaliable once\nthe plugin loads.  Please check the docs for these ",(0,a.kt)("a",{parentName:"p",href:"#plugins-packages"},"plugins"),"."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"pattern"),(0,a.kt)("th",{parentName:"tr",align:null},"Pattern"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"TextYankPost"),(0,a.kt)("td",{parentName:"tr",align:null})))),(0,a.kt)("h2",{id:"commands"},"Commands"),(0,a.kt)("p",null,"Commands for the ",(0,a.kt)("inlineCode",{parentName:"p"},"doom.core.required")," module."),(0,a.kt)("p",null,"Note: Plugins may create additional commands, these will be avaliable once\nthe plugin loads.  Please check the docs for these ",(0,a.kt)("a",{parentName:"p",href:"#plugins-packages"},"plugins"),"."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Command"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null," :DoomProfile ")),(0,a.kt)("td",{parentName:"tr",align:null},"Shows total startup time of the doom framework.")))))}c.isMDXComponent=!0}}]);