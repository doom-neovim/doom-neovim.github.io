"use strict";(self.webpackChunkdoom_neovim_github_io=self.webpackChunkdoom_neovim_github_io||[]).push([[6750],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),g=r,m=d["".concat(s,".").concat(g)]||d[g]||p[g]||a;return n?o.createElement(m,l(l({ref:t},c),{},{components:n})):o.createElement(m,l({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<a;u++)l[u]=n[u];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7511:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));const a={},l="Vue 3",i={unversionedId:"modules/langs/vue",id:"modules/langs/vue",title:"Vue 3",description:"Adds Vue 3 language support to doom nvim.",source:"@site/docs/modules/langs/vue.md",sourceDirName:"modules/langs",slug:"/modules/langs/vue",permalink:"/docs/modules/langs/vue",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Typescript",permalink:"/docs/modules/langs/typescript"},next:{title:"YAML",permalink:"/docs/modules/langs/yaml"}},s={},u=[{value:"Trouble shooting",id:"trouble-shooting",level:2},{value:"Settings",id:"settings",level:2},{value:"Autocommands",id:"autocommands",level:2}],c={toc:u};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"vue-3"},"Vue 3"),(0,r.kt)("p",null,"Adds Vue 3 language support to doom nvim."),(0,r.kt)("h2",{id:"trouble-shooting"},"Trouble shooting"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Make sure that you're using typescript version 4.x.x in your projects.  This\nmodule will try to use the local typescript install in ",(0,r.kt)("inlineCode",{parentName:"li"},"node_modules")," but\ndoes not support any typescript version before v4.0.0.")),(0,r.kt)("h2",{id:"settings"},"Settings"),(0,r.kt)("p",null,"Settings for the vue module."),(0,r.kt)("p",null,"You can access and override these values in your ",(0,r.kt)("inlineCode",{parentName:"p"},"config.lua"),". I.e."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local vue_settings = doom.langs.vue.settings\nvue_settings.<field> = <new_value>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'vue.settings = {\n  --- Disables auto installing the treesitter\n  --- @type boolean\n  disable_treesitter = false,\n  --- Treesitter grammars to install\n  --- @type string|string[]\n  treesitter_grammars = {\n    "vue",\n    "css",\n    "scss",\n    "html",\n    "scss",\n    "javascript",\n    "typescript",\n  },\n\n  --- Disables default LSP config\n  --- @type boolean\n  disable_lsp = false,\n  --- Name of the language server\n  --- @type string\n  lsp_name = "tsserver",\n\n  --- Disables null-ls formatting sources\n  --- @type boolean\n  disable_formatting = false,\n  --- Mason.nvim package to auto install the formatter from\n  --- @type string\n  formatting_package = "eslint_d",\n  --- String to access the null_ls diagnositcs provider\n  --- @type string\n  formatting_provider = "builtins.formatting.eslint_d",\n  --- Function to configure null-ls formatter\n  --- @type function|nil\n  formatting_config = nil,\n\n  --- Disables null-ls diagnostic sources\n  --- @type boolean\n  disable_diagnostics = false,\n  --- Mason.nvim package to auto install the diagnostics provider from\n  --- @type string\n  diagnostics_package = "eslint_d",\n  --- String to access the null_ls diagnositcs provider\n  --- @type string\n  diagnostics_provider = "builtins.diagnostics.eslint_d",\n  --- Function to configure null-ls diagnostics\n  --- @type function|nil\n  diagnostics_config = nil,\n\n  --- Disables null-ls diagnostic sources\n  --- @type boolean\n  disable_code_actions = false,\n  --- Mason.nvim package to auto install the code_actions provider from\n  --- @type string\n  code_actions_package = "eslint_d",\n  --- String to access the null_ls diagnositcs provider\n  --- @type string\n  code_actions_provider = "builtins.code_actions.eslint_d",\n  --- Function to configure null-ls code_actions\n  --- @type function|nil\n  code_actions_config = nil,\n\n  -- Volar API lspconfig options\n  lsp_config = {\n    default_config = {},\n  },\n}\n\nlocal langs_utils = require("doom.modules.langs.utils")\n')),(0,r.kt)("h2",{id:"autocommands"},"Autocommands"),(0,r.kt)("p",null,"Autocommands for the ",(0,r.kt)("inlineCode",{parentName:"p"},"doom.langs.vue")," module."),(0,r.kt)("p",null,"Note: Plugins may create additional autocommands, these will be avaliable once\nthe plugin loads.  Please check the docs for these ",(0,r.kt)("a",{parentName:"p",href:"#plugins-packages"},"plugins"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"pattern"),(0,r.kt)("th",{parentName:"tr",align:null},"Pattern"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"FileType"),(0,r.kt)("td",{parentName:"tr",align:null})))))}p.isMDXComponent=!0}}]);