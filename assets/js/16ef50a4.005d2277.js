"use strict";(self.webpackChunkdoom_neovim_github_io=self.webpackChunkdoom_neovim_github_io||[]).push([[546],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(r),d=a,g=m["".concat(i,".").concat(d)]||m[d]||c[d]||s;return r?n.createElement(g,l(l({ref:t},u),{},{components:r})):n.createElement(g,l({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,l=new Array(s);l[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<s;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6035:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const s={},l="REPL",o={unversionedId:"modules/features/lsp_progress",id:"modules/features/lsp_progress",title:"REPL",description:"Adds a floating element that shows LSP loading progress",source:"@site/docs/modules/features/lsp_progress.md",sourceDirName:"modules/features",slug:"/modules/features/lsp_progress",permalink:"/docs/modules/features/lsp_progress",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"LSP / Code Completions",permalink:"/docs/modules/features/lsp"},next:{title:"REPL",permalink:"/docs/modules/features/mapper"}},i={},p=[{value:"Settings",id:"settings",level:2},{value:"Plugins/Packages",id:"pluginspackages",level:2}],u={toc:p};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"repl"},"REPL"),(0,a.kt)("p",null,"Adds a floating element that shows LSP loading progress"),(0,a.kt)("h2",{id:"settings"},"Settings"),(0,a.kt)("p",null,"Settings for the lsp_progress module."),(0,a.kt)("p",null,"You can access and override these values in your ",(0,a.kt)("inlineCode",{parentName:"p"},"config.lua"),". I.e."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local lsp_progress_settings = doom.features.lsp_progress.settings\nlsp_progress_settings.<field> = <new_value>\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'lsp_progress.settings = {\n  -- Passed into `require("fidget").setup()`\n  -- We just rely on the defaults\n  fidget_settings = {},\n}\n\n')),(0,a.kt)("h2",{id:"pluginspackages"},"Plugins/Packages"),(0,a.kt)("p",null,"Plugins for the ",(0,a.kt)("inlineCode",{parentName:"p"},"doom.features.lsp_progress")," module."),(0,a.kt)("p",null,"These plugins will be passed into packer.nvim on startup.  You can tweak\nthe packer options by accessing these values in your ",(0,a.kt)("inlineCode",{parentName:"p"},"config.lua")," file.\ni.e.:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local lsp_progress_packages = doom.features.lsp_progress.packages\nlsp_progress_packages['fidget.nvim'].commit = '<my_new_commit_sha>'\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Key"),(0,a.kt)("th",{parentName:"tr",align:null},"Source"),(0,a.kt)("th",{parentName:"tr",align:null},"Commit"),(0,a.kt)("th",{parentName:"tr",align:null},"Is Lazy?"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null," fidget.nvim ")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/j-hui/fidget.nvim"},"j-hui/fidget.nvim")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/j-hui/fidget.nvim/commit/1097a86db8ba38e390850dc4035a03ed234a4673"},"db8ba38e390850dc4035a03ed234a4673")),(0,a.kt)("td",{parentName:"tr",align:null})))))}c.isMDXComponent=!0}}]);