"use strict";(self.webpackChunkdoom_neovim_github_io=self.webpackChunkdoom_neovim_github_io||[]).push([[7350],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(n),h=a,d=m["".concat(s,".").concat(h)]||m[h]||p[h]||l;return n?r.createElement(d,o(o({ref:t},u),{},{components:n})):r.createElement(d,o({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6686:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={},o="Whichkey",i={unversionedId:"modules/features/whichkey",id:"modules/features/whichkey",title:"Whichkey",description:"Shows an interactive cheatsheet to help",source:"@site/docs/modules/features/whichkey.md",sourceDirName:"modules/features",slug:"/modules/features/whichkey",permalink:"/docs/modules/features/whichkey",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Trouble",permalink:"/docs/modules/features/trouble"},next:{title:"Zen",permalink:"/docs/modules/features/zen"}},s={},c=[{value:"Settings",id:"settings",level:2},{value:"Plugins/Packages",id:"pluginspackages",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"whichkey"},"Whichkey"),(0,a.kt)("p",null,"Shows an interactive cheatsheet to help"),(0,a.kt)("h2",{id:"settings"},"Settings"),(0,a.kt)("p",null,"Settings for the whichkey module."),(0,a.kt)("p",null,"You can access and override these values in your ",(0,a.kt)("inlineCode",{parentName:"p"},"config.lua"),". I.e."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local whichkey_settings = doom.features.whichkey.settings\nwhichkey_settings.<field> = <new_value>\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'whichkey.settings = {\n  leader = " ",\n  plugins = {\n    marks = false,\n    registers = false,\n    presets = {\n      operators = false,\n      motions = true,\n      text_objects = true,\n      windows = true,\n      nav = true,\n      z = true,\n      g = true,\n    },\n  },\n  operators = {\n    d = "Delete",\n    c = "Change",\n    y = "Yank (copy)",\n    ["g~"] = "Toggle case",\n    ["gu"] = "Lowercase",\n    ["gU"] = "Uppercase",\n    [">"] = "Indent right",\n    ["<lt>"] = "Indent left",\n    ["zf"] = "Create fold",\n    ["!"] = "Filter though external program",\n  },\n  icons = {\n    breadcrumb = "\xbb",\n    separator = "\u279c",\n    group = "+",\n  },\n  key_labels = {\n    ["<space>"] = "SPC",\n    ["<cr>"] = "RET",\n    ["<tab>"] = "TAB",\n  },\n  window = {\n    padding = { 0, 0, 0, 0 },\n    border = doom.border_style,\n  },\n  layout = {\n    height = { min = 1, max = 10 },\n    spacing = 3,\n    align = "left",\n  },\n  ignore_missing = true,\n  hidden = {\n    "<silent>",\n    "<Cmd>",\n    "<cmd>",\n    "<Plug>",\n    "call",\n    "lua",\n    "^:",\n    "^ ",\n  },\n  show_help = true,\n  triggers = "auto",\n}\n')),(0,a.kt)("h2",{id:"pluginspackages"},"Plugins/Packages"),(0,a.kt)("p",null,"Plugins for the ",(0,a.kt)("inlineCode",{parentName:"p"},"doom.features.whichkey")," module."),(0,a.kt)("p",null,"These plugins will be passed into packer.nvim on startup.  You can tweak\nthe packer options by accessing these values in your ",(0,a.kt)("inlineCode",{parentName:"p"},"config.lua")," file.\ni.e.:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local whichkey_packages = doom.features.whichkey.packages\nwhichkey_packages['which-key.nvim'].commit = '<my_new_commit_sha>'\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Key"),(0,a.kt)("th",{parentName:"tr",align:null},"Source"),(0,a.kt)("th",{parentName:"tr",align:null},"Commit"),(0,a.kt)("th",{parentName:"tr",align:null},"Is Lazy?"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null," which-key.nvim ")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/folke/which-key.nvim"},"folke/which-key.nvim")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/folke/which-key.nvim/commit/6885b669523ff4238de99a7c653d47b081b5506d"},"9523ff4238de99a7c653d47b081b5506d")),(0,a.kt)("td",{parentName:"tr",align:null})))))}p.isMDXComponent=!0}}]);