"use strict";(self.webpackChunkdoom_neovim_github_io=self.webpackChunkdoom_neovim_github_io||[]).push([[9291],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),m=s(r),d=o,f=m["".concat(i,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(f,l(l({ref:t},c),{},{components:r})):n.createElement(f,l({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=m;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u.mdxType="string"==typeof e?e:o,l[1]=u;for(var s=2;s<a;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8425:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>u,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={},l="Trouble",u={unversionedId:"modules/features/trouble",id:"modules/features/trouble",title:"Trouble",description:"Shows project wide lsp diagnostics.",source:"@site/docs/modules/features/trouble.md",sourceDirName:"modules/features",slug:"/modules/features/trouble",permalink:"/docs/modules/features/trouble",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Todo Comments",permalink:"/docs/modules/features/todo_comments"},next:{title:"Whichkey",permalink:"/docs/modules/features/whichkey"}},i={},s=[{value:"Settings",id:"settings",level:2},{value:"Plugins/Packages",id:"pluginspackages",level:2}],c={toc:s};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"trouble"},"Trouble"),(0,o.kt)("p",null,"Shows project wide lsp diagnostics."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f Due to the way some LSPs are implemented it may only show diagnostics\nfor current or recently opened buffers.")),(0,o.kt)("h2",{id:"settings"},"Settings"),(0,o.kt)("p",null,"Settings for the trouble module."),(0,o.kt)("p",null,"You can access and override these values in your ",(0,o.kt)("inlineCode",{parentName:"p"},"config.lua"),". I.e."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"local trouble_settings = doom.features.trouble.settings\ntrouble_settings.<field> = <new_value>\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'trouble.packages = {\n  ["trouble.nvim"] = {\n    "folke/trouble.nvim",\n    commit = "929315ea5f146f1ce0e784c76c943ece6f36d786",\n    cmd = { "Trouble", "TroubleClose", "TroubleRefresh", "TroubleToggle" },\n    opt = true,\n  },\n}\n')),(0,o.kt)("h2",{id:"pluginspackages"},"Plugins/Packages"),(0,o.kt)("p",null,"Plugins for the ",(0,o.kt)("inlineCode",{parentName:"p"},"doom.features.trouble")," module."),(0,o.kt)("p",null,"These plugins will be passed into packer.nvim on startup.  You can tweak\nthe packer options by accessing these values in your ",(0,o.kt)("inlineCode",{parentName:"p"},"config.lua")," file.\ni.e.:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"local trouble_packages = doom.features.trouble.packages\ntrouble_packages['trouble.nvim'].commit = '<my_new_commit_sha>'\n")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Key"),(0,o.kt)("th",{parentName:"tr",align:null},"Source"),(0,o.kt)("th",{parentName:"tr",align:null},"Commit"),(0,o.kt)("th",{parentName:"tr",align:null},"Is Lazy?"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null," trouble.nvim ")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/folke/trouble.nvim"},"folke/trouble.nvim")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/folke/trouble.nvim/commit/929315ea5f146f1ce0e784c76c943ece6f36d786"},"a5f146f1ce0e784c76c943ece6f36d786")),(0,o.kt)("td",{parentName:"tr",align:null},"\u2705")))))}p.isMDXComponent=!0}}]);