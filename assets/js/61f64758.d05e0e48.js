"use strict";(self.webpackChunkdoom_neovim_github_io=self.webpackChunkdoom_neovim_github_io||[]).push([[7199],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),c=r,g=m["".concat(o,".").concat(c)]||m[c]||s[c]||l;return n?a.createElement(g,d(d({ref:t},u),{},{components:n})):a.createElement(g,d({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,d=new Array(l);d[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,d[1]=i;for(var p=2;p<l;p++)d[p]=n[p];return a.createElement.apply(null,d)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3077:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>s,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={},d="DAP / Debugger",i={unversionedId:"modules/features/dap",id:"modules/features/dap",title:"DAP / Debugger",description:"Adds debugging capabilities to doom-nvim.",source:"@site/docs/modules/features/dap.md",sourceDirName:"modules/features",slug:"/modules/features/dap",permalink:"/docs/modules/features/dap",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Comments",permalink:"/docs/modules/features/comment"},next:{title:"Dashboard",permalink:"/docs/modules/features/dashboard"}},o={},p=[{value:"Settings",id:"settings",level:2},{value:"Plugins/Packages",id:"pluginspackages",level:2},{value:"Keybinds",id:"keybinds",level:2}],u={toc:p};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dap--debugger"},"DAP / Debugger"),(0,r.kt)("p",null,"Adds debugging capabilities to doom-nvim.\n\u26a0\ufe0f This module hasn't been tested extensively and you'll have to provide\nmost of the config yourself."),(0,r.kt)("h2",{id:"settings"},"Settings"),(0,r.kt)("p",null,"Settings for the dap module."),(0,r.kt)("p",null,"You can access and override these values in your ",(0,r.kt)("inlineCode",{parentName:"p"},"config.lua"),". I.e."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local dap_settings = doom.features.dap.settings\ndap_settings.<field> = <new_value>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'dap.settings = {\n  debugger_dir = vim.fn.stdpath("data") .. "/dapinstall/",\n  debugger_map = {},\n  dapui = {\n    icons = {\n      expanded = "\u25be",\n      collapsed = "\u25b8",\n    },\n    mappings = {\n      expand = { "<CR>", "<2-LeftMouse>" },\n      open = "o",\n      remove = "d",\n      edit = "e",\n      repl = "r",\n    },\n    sidebar = {\n      elements = {\n        "scopes",\n        "breakpoints",\n        "stacks",\n        "watches",\n      },\n      size = 40,\n      position = "left",\n    },\n    tray = {\n      elements = {\n        "repl",\n      },\n      size = 10,\n      position = "bottom",\n    },\n  },\n}\n')),(0,r.kt)("h2",{id:"pluginspackages"},"Plugins/Packages"),(0,r.kt)("p",null,"Plugins for the ",(0,r.kt)("inlineCode",{parentName:"p"},"doom.features.dap")," module."),(0,r.kt)("p",null,"These plugins will be passed into packer.nvim on startup.  You can tweak\nthe packer options by accessing these values in your ",(0,r.kt)("inlineCode",{parentName:"p"},"config.lua")," file.\ni.e.:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local dap_packages = doom.features.dap.packages\ndap_packages['nvim-dap-ui'].commit = '<my_new_commit_sha>'\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Source"),(0,r.kt)("th",{parentName:"tr",align:null},"Commit"),(0,r.kt)("th",{parentName:"tr",align:null},"Is Lazy?"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null," nvim-dap-ui ")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/rcarriga/nvim-dap-ui"},"rcarriga/nvim-dap-ui")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/rcarriga/nvim-dap-ui/commit/1cd4764221c91686dcf4d6b62d7a7b2d112e0b13"},"221c91686dcf4d6b62d7a7b2d112e0b13")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null," nvim-dap ")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/mfussenegger/nvim-dap"},"mfussenegger/nvim-dap")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/mfussenegger/nvim-dap/commit/0b320f5bd4e5f81e8376f9d9681b5c4ee4483c25"},"bd4e5f81e8376f9d9681b5c4ee4483c25")),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"keybinds"},"Keybinds"),(0,r.kt)("p",null,"Override these keybinds in your config.lua:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local dap = doom.features.dap\ndap.binds = {\n  { "<leader>prefix", "<cmd>echo \'my new keybind\'<CR>", name = "Description for my new keybind" }\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Keymap"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null," ","<","leader",">","dc ")),(0,r.kt)("td",{parentName:"tr",align:null},"Continue/Start")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null," ","<","leader",">","dd ")),(0,r.kt)("td",{parentName:"tr",align:null},"Disconnect")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null," ","<","leader",">","de ")),(0,r.kt)("td",{parentName:"tr",align:null},"Evaluate")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null," ","<","leader",">","de ")),(0,r.kt)("td",{parentName:"tr",align:null},"Evaluate")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null," ","<","leader",">","dbb ")),(0,r.kt)("td",{parentName:"tr",align:null},"Toggle breakpoint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null," ","<","leader",">","dbc ")),(0,r.kt)("td",{parentName:"tr",align:null},"Toggle")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null," ","<","leader",">","dbh ")),(0,r.kt)("td",{parentName:"tr",align:null},"Hit number")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null," ","<","leader",">","dbl ")),(0,r.kt)("td",{parentName:"tr",align:null},"Log")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null," ","<","leader",">","od ")),(0,r.kt)("td",{parentName:"tr",align:null},"Debugger")))))}s.isMDXComponent=!0}}]);