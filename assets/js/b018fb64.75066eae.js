"use strict";(self.webpackChunkdoom_neovim_github_io=self.webpackChunkdoom_neovim_github_io||[]).push([[7706],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,f=c["".concat(p,".").concat(m)]||c[m]||d[m]||l;return n?r.createElement(f,o(o({ref:t},s),{},{components:n})):r.createElement(f,o({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6508:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const l={},o="Explorer",i={unversionedId:"modules/features/explorer",id:"modules/features/explorer",title:"Explorer",description:"Adds a file tree explorer to neovim.  This module is incompatible with",source:"@site/docs/modules/features/explorer.md",sourceDirName:"modules/features",slug:"/modules/features/explorer",permalink:"/docs/modules/features/explorer",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Editorconfig",permalink:"/docs/modules/features/editorconfig"},next:{title:"Extra Snippets",permalink:"/docs/modules/features/extra_snippets"}},p={},u=[{value:"Settings",id:"settings",level:2},{value:"Plugins/Packages",id:"pluginspackages",level:2},{value:"Keybinds",id:"keybinds",level:2},{value:"Autocommands",id:"autocommands",level:2}],s={toc:u};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"explorer"},"Explorer"),(0,a.kt)("p",null,"Adds a file tree explorer to neovim.  This module is incompatible with\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"netrw")," module."),(0,a.kt)("h2",{id:"settings"},"Settings"),(0,a.kt)("p",null,"Settings for the explorer module."),(0,a.kt)("p",null,"You can access and override these values in your ",(0,a.kt)("inlineCode",{parentName:"p"},"config.lua"),". I.e."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local explorer_settings = doom.features.explorer.settings\nexplorer_settings.<field> = <new_value>\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'explorer.settings = {\n  disable_netrw = true,\n  hijack_netrw = true,\n  open_on_setup = false,\n  ignore_ft_on_setup = {},\n  open_on_tab = true,\n  hijack_cursor = true,\n  update_cwd = true,\n  respect_buf_cwd = true,\n  update_focused_file = {\n    enable = true,\n    update_cwd = true,\n    ignore_list = {},\n  },\n  view = {\n    width = 35,\n    side = "left",\n    mappings = {\n      custom_only = false,\n    },\n  },\n  filters = {\n    custom = { ".git", "node_modules.editor", ".cache", "__pycache__" },\n  },\n  renderer = {\n    indent_markers = {\n      enable = true,\n    },\n    highlight_git = true,\n    root_folder_modifier = ":~",\n    add_trailing = true,\n    group_empty = true,\n    special_files = {\n      "README.md",\n      "Makefile",\n      "MAKEFILE",\n    },\n    icons = {\n      glyphs = {\n        default = "\ue612",\n        symlink = "\uf481",\n        folder = {\n          arrow_open = "\uf47c",\n          arrow_closed = "\uf460",\n          default = "\ue5ff",\n          open = "\ue5fe",\n          empty = "\uf114",\n          empty_open = "\uf115",\n          symlink = "\uf482",\n          symlink_open = "\ue5fe",\n        },\n        git = {\n          unstaged = "\uf457",\n          staged = "\uf459",\n          unmerged = "\ue727",\n          renamed = "\uf45a",\n          untracked = "\uf128",\n          deleted = "\uf458",\n          ignored = "\u25cc",\n        },\n      },\n      show = {\n        git = true,\n        folder = true,\n        file = true,\n        folder_arrow = true,\n      },\n    },\n  },\n  actions = {\n    open_file = {\n      resize_window = true, -- previously view.auto_resize\n      window_picker = {\n        exclude = {\n          filetype = {\n            "notify",\n            "packer",\n            "qf",\n          },\n          buftype = {\n            "terminal",\n          },\n        },\n      },\n    },\n  },\n  diagnostics = {\n    enable = false,\n  },\n}\n')),(0,a.kt)("h2",{id:"pluginspackages"},"Plugins/Packages"),(0,a.kt)("p",null,"Plugins for the ",(0,a.kt)("inlineCode",{parentName:"p"},"doom.features.explorer")," module."),(0,a.kt)("p",null,"These plugins will be passed into packer.nvim on startup.  You can tweak\nthe packer options by accessing these values in your ",(0,a.kt)("inlineCode",{parentName:"p"},"config.lua")," file.\ni.e.:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local explorer_packages = doom.features.explorer.packages\nexplorer_packages['nvim-tree.lua'].commit = '<my_new_commit_sha>'\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Key"),(0,a.kt)("th",{parentName:"tr",align:null},"Source"),(0,a.kt)("th",{parentName:"tr",align:null},"Commit"),(0,a.kt)("th",{parentName:"tr",align:null},"Is Lazy?"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null," nvim-tree.lua ")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/kyazdani42/nvim-tree.lua"},"kyazdani42/nvim-tree.lua")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/kyazdani42/nvim-tree.lua/commit/7282f7de8aedf861fe0162a559fc2b214383c51c"},"e8aedf861fe0162a559fc2b214383c51c")),(0,a.kt)("td",{parentName:"tr",align:null},"\u2705")))),(0,a.kt)("h2",{id:"keybinds"},"Keybinds"),(0,a.kt)("p",null,"Override these keybinds in your config.lua:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local explorer = doom.features.explorer\nexplorer.binds = {\n  { "<leader>prefix", "<cmd>echo \'my new keybind\'<CR>", name = "Description for my new keybind" }\n}\n')),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Keymap"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null," ","<","F3",">"," ")),(0,a.kt)("td",{parentName:"tr",align:null},"Toggle file explorer")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null," ","<","leader",">","oe ")),(0,a.kt)("td",{parentName:"tr",align:null},"Explorer")))),(0,a.kt)("h2",{id:"autocommands"},"Autocommands"),(0,a.kt)("p",null,"Autocommands for the ",(0,a.kt)("inlineCode",{parentName:"p"},"doom.features.explorer")," module."),(0,a.kt)("p",null,"Note: Plugins may create additional autocommands, these will be avaliable once\nthe plugin loads.  Please check the docs for these ",(0,a.kt)("a",{parentName:"p",href:"#plugins-packages"},"plugins"),"."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"pattern"),(0,a.kt)("th",{parentName:"tr",align:null},"Pattern"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"BufEnter"),(0,a.kt)("td",{parentName:"tr",align:null})))))}d.isMDXComponent=!0}}]);